name: PX4 SITL with ROS2 Integration Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  ROS_DISTRO: humble
  LANG: en_US.UTF-8
  LC_ALL: en_US.UTF-8

jobs:
  build-and-test:
    runs-on: ubuntu-22.04

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Setup Locale
      run: |
        sudo apt update && sudo apt install locales
        sudo locale-gen en_US en_US.UTF-8
        sudo update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8

    - name: Install ROS2 Dependencies
      run: |
        sudo apt install -y software-properties-common
        sudo add-apt-repository universe
        sudo apt update && sudo apt install -y curl
        sudo curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg
        echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(. /etc/os-release && echo $UBUNTU_CODENAME) main" | sudo tee /etc/apt/sources.list.d/ros2.list > /dev/null
        sudo apt update && sudo apt upgrade -y
        sudo apt install -y ros-humble-desktop ros-dev-tools

    - name: Install Python Dependencies
      run: |
        pip install --user -U empy==3.3.4 pyros-genmsg setuptools

    - name: Clone and Setup PX4
      run: |
        git clone https://github.com/PX4/PX4-Autopilot.git --recursive
        bash ./PX4-Autopilot/Tools/setup/ubuntu.sh --no-sim-tools
        cd PX4-Autopilot
        make px4_sitl

    - name: Setup XRCE-DDS Agent
      run: |
        git clone https://github.com/eProsima/Micro-XRCE-DDS-Agent.git
        cd Micro-XRCE-DDS-Agent
        mkdir build
        cd build
        cmake ..
        make
        sudo make install
        sudo ldconfig /usr/local/lib/

    - name: Build ROS2 Workspace
      run: |
        mkdir -p ~/ros2_ws/src
        cp -r ${{ github.workspace }}/* ~/ros2_ws/src/
        cd ~/ros2_ws
        source /opt/ros/${{ env.ROS_DISTRO }}/setup.bash
        colcon build

    - name: Start Simulation and Agent
      run: |
        # Start XRCE-DDS Agent in background
        MicroXRCEAgent udp4 -p 8888 > agent.log 2>&1 &
        sleep 5

        # Start PX4 SITL
        cd PX4-Autopilot
        make px4_sitl gz_x500 > px4.log 2>&1 &
        sleep 10

    - name: Run Integration Tests
      run: |
        source /opt/ros/${{ env.ROS_DISTRO }}/setup.bash
        source ~/ros2_ws/install/setup.bash
        # Add your test commands here
        ros2 test ~/ros2_ws/src/your_package

    - name: Upload Logs on Failure
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: logs
        path: |
          agent.log
          px4.log
        retention-days: 7
